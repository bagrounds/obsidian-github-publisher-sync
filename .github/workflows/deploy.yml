name: Deploy Quartz site to GitHub Pages

on:
  push:
    branches:
      - main
      - copilot/investigate-build-time-optimization  # TEMPORARY: for testing cache optimization

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    container:
      image: node:20-bullseye-slim
    steps:
      - name: Install git
        run: |
          apt-get update
          apt-get install -y git

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history

      - name: Configure Git
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies (if cache is not hit)
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: npm ci

      # Cache OG images across builds for performance. This uses a hybrid approach:
      # 1. GitHub Actions caches the entire public/ directory (directory-level)
      # 2. Build-time logic in quartz/plugins/emitters/ogImage.tsx checks each file's
      #    modification time and skips regeneration if cached image is newer than source
      # 3. Only changed files regenerate their OG images, others reuse cached versions
      # This provides per-file granularity without managing thousands of cache entries.
      - name: Cache OG Images
        uses: actions/cache@v4
        with:
          path: public
          key: og-images-${{ github.sha }}
          restore-keys: |
            og-images-

      - name: Build Quartz
        env:
          SKIP_EXISTING_OG_IMAGES: "true"
        run: npx quartz build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
          reporting_interval: 300
          error_count: 180
